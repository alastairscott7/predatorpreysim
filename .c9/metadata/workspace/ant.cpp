{"filter":false,"title":"ant.cpp","tooltip":"/ant.cpp","undoManager":{"mark":58,"position":58,"stack":[[{"start":{"row":0,"column":0},"end":{"row":116,"column":1},"action":"insert","lines":["","//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","//MEMBER FUNCTIONS OF ANT SUB-CLASS","//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","","Ant::Ant(int xEntry, int yEntry, Board *thisBoard)","{","    //Ant default constructor","    identifier='A';","    xCoord = xEntry;","    yCoord = yEntry;","    organismBoard = thisBoard;","    moveComplete = false;","    breedCounter = 0;","}","","void Ant::move()","{","    //This function will move an ant in a random direction","    ","    //increment breed counter, one more turn towards being able to breed","    breedCounter++;","    ","    //int direction is set to a random direction between 1 and 4","    int direction;","    direction = rand() % 4 + 1;","    ","    //if statement which determines how to move the ant based on what direction was selected","    if(direction == 1)","    {","        //direction 1 is down","        //check that space below is free and valid","        if(organismBoard->getOrganism(xCoord, yCoord + 1) == NULL && boundaryFlag(xCoord, yCoord + 1))","        {","            //call new location function to move one space down","            newLocation(xCoord, yCoord + 1);","            ","            //update move complete so that the ant will not move again this turn","            moveComplete = true;","        }","    }","    else if(direction == 2)","    {","        //direction 2 is right","        //check that space right is free and valid","       if(organismBoard->getOrganism(xCoord + 1, yCoord) == NULL && boundaryFlag(xCoord + 1, yCoord))","        {","            //call new location function to move one space right","            newLocation(xCoord + 1, yCoord);","            ","            //update move complete so that the ant will not move again this turn","            moveComplete = true;","        } ","    }","    else if(direction == 3)","    {","        //direction 3 is up","        //check that space above is free and valid","        if(organismBoard->getOrganism(xCoord, yCoord - 1) == NULL && boundaryFlag(xCoord, yCoord - 1))","        {","            //call new location function to move one space up","            newLocation(xCoord, yCoord - 1);","            ","            //update move complete so that the ant will not move again this turn","            moveComplete = true;","        }","    }","    else if(direction == 4)","    {","        //direction 4 is left","        //check that space left is free and valid","        if(organismBoard->getOrganism(xCoord - 1, yCoord) == NULL && boundaryFlag(xCoord - 1, yCoord))","        {","            //call new location function to move one space left","            newLocation(xCoord - 1, yCoord);","            ","            //update move complete so that the ant will not move again this turn","            moveComplete = true;","        }","    }","}","","void Ant::breed()","{","    //This function will spawn a new ant in an unoccupied cell","    ","    //check if breed counter has exceeded the breeding threshold value","    if(breedCounter >= 3)","    {","        //try to find an unoccupied cell to spawn new ant into, then reset breed counter","        if((organismBoard->getOrganism(xCoord, yCoord + 1) == NULL) && boundaryFlag(xCoord, yCoord + 1))","        {","            organismBoard->setNewAnt(xCoord, yCoord + 1);","            breedCounter = 0;","        }","        else if((organismBoard->getOrganism(xCoord + 1, yCoord) == NULL) && boundaryFlag(xCoord + 1, yCoord))","        {","            organismBoard->setNewAnt(xCoord + 1, yCoord);","            breedCounter = 0;","        }","        else if((organismBoard->getOrganism(xCoord, yCoord - 1) == NULL) && boundaryFlag(xCoord, yCoord - 1))","        {","            organismBoard->setNewAnt(xCoord, yCoord - 1);","            breedCounter = 0;","        }","        else if((organismBoard->getOrganism(xCoord - 1, yCoord) == NULL) && boundaryFlag(xCoord - 1, yCoord))","        {","            organismBoard->setNewAnt(xCoord - 1, yCoord);","            breedCounter = 0;","        }","        else","        {","            //if no cells unoccupied, do not breed","            breedCounter = 0;","        }","    }","}"],"id":1}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["#include <cstdlib>","","#include <iostream>","#include \"Ant.h\"","#include \"Organism.h\"","#include \"World.h\"","using namespace std;",""],"id":4}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["",""],"id":5}],[{"start":{"row":6,"column":20},"end":{"row":7,"column":0},"action":"remove","lines":["",""],"id":6}],[{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"remove","lines":["d"],"id":7}],[{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"remove","lines":["l"],"id":8}],[{"start":{"row":5,"column":12},"end":{"row":5,"column":13},"action":"remove","lines":["r"],"id":9}],[{"start":{"row":5,"column":11},"end":{"row":5,"column":12},"action":"remove","lines":["o"],"id":10}],[{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"remove","lines":["W"],"id":11}],[{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"insert","lines":["o"],"id":12}],[{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"remove","lines":["o"],"id":13}],[{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"insert","lines":["b"],"id":14}],[{"start":{"row":5,"column":11},"end":{"row":5,"column":12},"action":"insert","lines":["o"],"id":15}],[{"start":{"row":5,"column":12},"end":{"row":5,"column":13},"action":"insert","lines":["a"],"id":16}],[{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"insert","lines":["r"],"id":17}],[{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"insert","lines":["d"],"id":18}],[{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"remove","lines":["m"],"id":19}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"remove","lines":["s"],"id":20}],[{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"remove","lines":["i"],"id":21}],[{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"remove","lines":["n"],"id":22}],[{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"remove","lines":["a"],"id":23}],[{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"remove","lines":["g"],"id":24}],[{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"remove","lines":["r"],"id":25}],[{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"remove","lines":["O"],"id":26}],[{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["o"],"id":27}],[{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"insert","lines":["r"],"id":28}],[{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"insert","lines":["g"],"id":29}],[{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"insert","lines":["a"],"id":30}],[{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"insert","lines":["n"],"id":31}],[{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"insert","lines":["i"],"id":32}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["s"],"id":33}],[{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"insert","lines":["m"],"id":34}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"remove","lines":["t"],"id":35}],[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"remove","lines":["n"],"id":36}],[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"remove","lines":["A"],"id":37}],[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["a"],"id":38}],[{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["n"],"id":39}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["t"],"id":40}],[{"start":{"row":0,"column":18},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":41}],[{"start":{"row":5,"column":20},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":42}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":43}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"insert","lines":["c"],"id":44}],[{"start":{"row":7,"column":1},"end":{"row":7,"column":2},"action":"insert","lines":["l"],"id":45}],[{"start":{"row":7,"column":2},"end":{"row":7,"column":3},"action":"insert","lines":["a"],"id":46}],[{"start":{"row":7,"column":3},"end":{"row":7,"column":4},"action":"insert","lines":["s"],"id":47}],[{"start":{"row":7,"column":4},"end":{"row":7,"column":5},"action":"insert","lines":["s"],"id":48}],[{"start":{"row":7,"column":5},"end":{"row":7,"column":6},"action":"insert","lines":[" "],"id":49}],[{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"insert","lines":["B"],"id":50}],[{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"insert","lines":["o"],"id":51}],[{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"insert","lines":["a"],"id":52}],[{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"insert","lines":["r"],"id":53}],[{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"insert","lines":["d"],"id":54}],[{"start":{"row":7,"column":6},"end":{"row":7,"column":11},"action":"remove","lines":["Board"],"id":55},{"start":{"row":7,"column":6},"end":{"row":7,"column":11},"action":"insert","lines":["Board"]}],[{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"insert","lines":[";"],"id":56}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":12},"action":"remove","lines":["class Board;"],"id":57}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["",""],"id":58}],[{"start":{"row":5,"column":20},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":59}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":18},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":115,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1509156984714,"hash":"3f77e214710ce3fc4f8b2ed14121de5203ec9543"}